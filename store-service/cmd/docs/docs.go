// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/cart": {
            "get": {
                "description": "Retrieves the shopping cart for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Get cart by user ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cart.CartResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Update items in user's shopping cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Update cart",
                "parameters": [
                    {
                        "description": "Updated cart items",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cart.SubmitedCart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cart.CartResult"
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Add new items to user's shopping cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Add items to cart",
                "parameters": [
                    {
                        "description": "Cart items to add",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cart.SubmitedCart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cart.CartResult"
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/order": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new order from the submitted order details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Submit new order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.SubmitedOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created order",
                        "schema": {
                            "$ref": "#/definitions/api.OrderConfirmation"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/payment/confirm": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Process and confirm a payment for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Confirm payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payment details to confirm",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.SubmitedPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment confirmation details",
                        "schema": {
                            "$ref": "#/definitions/payment.SubmitedPaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/point": {
            "get": {
                "description": "Get user's total point balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "point"
                ],
                "summary": "Get total points",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/point.Point"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Deduct points from user's point balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "point"
                ],
                "summary": "Deduct points from user",
                "parameters": [
                    {
                        "description": "Point deduction request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/point.SubmitedPoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/point.Point"
                        }
                    },
                    "400": {
                        "description": "Bad request error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/product": {
            "get": {
                "description": "Search for products with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Search products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "30",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "0",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/product.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/product/{id}": {
            "get": {
                "description": "Get detailed information about a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.OrderConfirmation": {
            "description": "Order confirmation response containing order ID",
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer"
                }
            }
        },
        "cart.CartDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "product_brand": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "product_price_full_thb": {
                    "type": "number"
                },
                "product_price_thb": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "cart.CartResult": {
            "type": "object",
            "properties": {
                "carts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cart.CartDetail"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/cart.CartSummary"
                }
            }
        },
        "cart.CartSummary": {
            "type": "object",
            "properties": {
                "receive_point": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                },
                "total_price_full_thb": {
                    "type": "number"
                },
                "total_price_thb": {
                    "type": "number"
                }
            }
        },
        "cart.SubmitedCart": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "order.OrderProduct": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "order.SubmitedOrder": {
            "type": "object",
            "properties": {
                "burn_point": {
                    "type": "integer"
                },
                "cart": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.OrderProduct"
                    }
                },
                "discount_price": {
                    "type": "number"
                },
                "payment_method_id": {
                    "type": "integer"
                },
                "recipient_first_name": {
                    "type": "string"
                },
                "recipient_last_name": {
                    "type": "string"
                },
                "recipient_phone_number": {
                    "type": "string"
                },
                "shipping_address": {
                    "type": "string"
                },
                "shipping_district": {
                    "type": "string"
                },
                "shipping_method_id": {
                    "type": "integer"
                },
                "shipping_province": {
                    "type": "string"
                },
                "shipping_sub_disterict": {
                    "type": "string"
                },
                "shipping_zip_code": {
                    "type": "string"
                },
                "sub_total_price": {
                    "type": "number"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "payment.SubmitedPayment": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "otp": {
                    "type": "integer"
                },
                "ref_otp": {
                    "type": "string"
                }
            }
        },
        "payment.SubmitedPaymentResponse": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "payment_date": {
                    "type": "string"
                },
                "shipping_method_id": {
                    "type": "integer"
                },
                "tracking_number": {
                    "type": "string"
                }
            }
        },
        "point.Point": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "orgId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "point.SubmitedPoint": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                }
            }
        },
        "product.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "product_image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "product_price_full_thb": {
                    "type": "number"
                },
                "product_price_thb": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
